<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hao.mapper.ArticleMapper">
    <resultMap id="articleResultMap" type="ArticleDTO">
        <id column="id" property="id"/>
        <result column="title" property="title"></result>
        <result column="content" property="content"></result>
        <result column="thumbnail" property="thumbnail"></result>
        <result column="is_comment" property="isComment"></result>
        <result column="type" property="type"></result>
        <result column="original_url" property="originalUrl"></result>
        <result column="like_count" property="likeCount"></result>
        <result column="create_by" property="createBy"></result>
        <result column="create_time" property="createTime"></result>
        <result column="update_time" property="updateTime"></result>
        <result column="category_id" property="categoryId"></result>
        <result column="c_name" property="categoryName"></result>
        <collection property="tagList" ofType="TagVO">
            <id column="t_id" property="id"/>
            <result column="t_name" property="name"></result>
            <result column="t_color" property="color"></result>
        </collection>
    </resultMap>
    <resultMap type="java.lang.Long" id="count">
        <result column="total"/>
    </resultMap>


    <select id="getArticleById" resultMap="articleResultMap">

        SELECT
            a.id,
            a.title,
            a.content,
            a.thumbnail,
            a.is_comment,
            a.type,
            a.original_url,
            a.like_count,
            a.create_by,
            a.create_time,
            a.update_time,
            a.category_id,
            c.name AS c_name,
            t.id AS t_id,
            t.name AS t_name,
            t.color AS t_color
        FROM
            article a
            JOIN category c ON a.category_id = c.id
            LEFT JOIN article_tag at ON a.id = at.article_id
            LEFT JOIN blog_tag t ON at.tag_id = t.id
        where
            a.id = #{id}
            AND a.del_flag = 0
            AND a.status = 1

    </select>

    <!--GROUP_CONCAT函数将标签ID连接成一个字符串。然后在主查询中使用FIND_IN_SET函数来将这些标签ID拆分开-->
    <select id="listArticleByCondition" resultMap="listArticleByConditionMap">
        SELECT
        a.id,
        a.title,
        a.content,
        a.view_count,
        a.like_count,
        a.thumbnail,
        a.create_time,
        a.category_id,
        c.name AS c_name,
        t.id AS t_id,
        t.name AS t_name,
        IFNULL(COUNT(m.id), 0) AS m_count
        FROM
        (
        SELECT
        id,
        title,
        SUBSTRING(content, 1, 100) AS content,
        thumbnail,
        view_count,
        like_count,
        create_time,
        category_id
        FROM
        article
        WHERE
        del_flag = 0
        <if test="condition.categoryId != null">
            AND category_id = #{condition.categoryId}
        </if>
        <if test="condition.tagId != null">
            AND id IN (
            SELECT article_id
            FROM article_tag
            WHERE tag_id = #{condition.tagId}
            )
        </if>
        <if test="condition.keyword != null">
            AND title LIKE concat('%', #{condition.keyword}, '%')
        </if>
        LIMIT #{current}, #{size}
        ) a
        JOIN category c ON a.category_id = c.id
        LEFT JOIN (
        SELECT article_id, GROUP_CONCAT(tag_id) AS tag_ids
        FROM article_tag
        GROUP BY article_id
        ) at ON a.id = at.article_id
        LEFT JOIN blog_tag t ON FIND_IN_SET(t.id, at.tag_ids)
        LEFT JOIN comment m ON a.id = m.article_id
        GROUP BY a.id, t.id

    </select>

    <resultMap id="listArticleByConditionMap" type="ArticlePreviewDTO">
        <id column="id" property="id"/>
        <result column="title" property="title"></result>
        <result column="thumbnail" property="thumbnail"></result>
        <result column="content" property="content"></result>
        <result column="create_time" property="createTime"></result>
        <result column="view_count" property="viewCount"></result>
        <result column="like_count" property="likeCount"></result>
        <result column="m_count" property="commentCount"></result>
        <result column="category_id" property="categoryId"></result>
        <result column="c_name" property="categoryName"></result>
        <collection property="tags" ofType="TagVO">
            <id column="t_id" property="id"/>
            <result column="t_name" property="name"></result>
        </collection>
    </resultMap>


    <select id="countArticleByCondition" resultType="java.lang.Long">
        SELECT
        COUNT(*)
        FROM
        article
        WHERE
        del_flag = 0
        <if test="condition.categoryId != null">
            AND category_id = #{condition.categoryId}
        </if>
        <if test="condition.tagId != null">
            AND id IN (
            SELECT article_id
            FROM article_tag
            WHERE tag_id = #{condition.tagId}
            )
        </if>
        <if test="condition.keyword != null">
            AND title LIKE concat('%', #{condition.keyword}, '%')
        </if>
    </select>
    <select id="listViewCount" resultType="java.util.Map">
        SELECT
            id,
            view_count
        FROM article
        WHERE del_flag = 0
    </select>
</mapper>